<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.newjeanssa.budongbudong.model.dao.ReviewDao">
    <resultMap type="ReviewAptDto" id="ReviewAptResultMap">
        <id property="reviewId" column="review_id" />
        <result property="aptId" column="apt_id" />
        <result property="reviewComment" column="review_comment" />
        <result property="reviewScore" column="review_score" />
        <result property="createTime" column="create_time" />
    </resultMap>

    <resultMap type="ReviewUserDto" id="ReviewUserResultMap">
        <id property="reviewId" column="review_id" />
        <result property="aptId" column="apt_id" />
        <result property="aptName" column="apt_name" />
        <result property="aptAddress" column="apt_address" />
        <result property="aptDong" column="dong_name" />
        <result property="reviewComment" column="review_comment" />
        <result property="reviewScore" column="review_score" />
        <result property="createTime" column="create_time" />
    </resultMap>

    <resultMap type="ReviewAptDto" id="ReviewAptInfoResultMap" extends="ReviewAptResultMap">
        <collection property="userDto" resultMap="com.newjeanssa.budongbudong.model.dao.UserDao.UserResultMap"/>
    </resultMap>

    <insert id="insertReview" parameterType="ReviewAptDto">
        INSERT INTO review (user_id, apt_id, review_comment, review_score)
        VALUES ( #{userDto.id}, #{aptId}, #{reviewComment}, #{reviewScore} )
    </insert>

    <select id="selectReviewsByAptId" parameterType="String" resultMap="ReviewAptInfoResultMap">
        SELECT t2.user_id id, t2.email, t2.name, t2.role, t1.review_id, t1.apt_id, t1.review_comment, t1.review_score, t1.create_time
        FROM review t1 JOIN user t2 ON t1.user_id = t2.user_id
        WHERE t1.apt_id = #{aptId}
        ORDER BY t1.create_time DESC
    </select>

    <select id="selectReviewsByUserId" parameterType="long" resultMap="ReviewUserResultMap">
        SELECT t1.review_id, t1.apt_id, t1.review_comment, t1.review_score, t1.create_time, t2.apt_name, t2.apt_address, t3.dong_name
        FROM review t1 JOIN apt t2 ON t1.apt_id = t2.apt_id
                       JOIN dong_code t3 ON t2.dong_code = t3.dong_code
        WHERE t1.user_id = #{userId}
        ORDER BY t1.create_time DESC
    </select>

    <select id="selectReview" parameterType="long" resultType="ReviewIdsDto">
        SELECT review_id reviewId, apt_id aptId
        FROM review
        WHERE review_id = #{reviewId}
    </select>

    <update id="updateReview" parameterType="ReviewAptDto">
        UPDATE review
        SET review_comment = #{reviewComment}, review_score = #{reviewScore}
        WHERE review_id = #{reviewId}
    </update>

    <update id="updateReviewScore" parameterType="String">
        UPDATE apt t1, (SELECT (AVG(review_score) / 5) * 100 AS score FROM review WHERE apt_id = #{aptId}) t2
        SET total_score = ((facilities_score + store_score + food_score + medical_score + education_score) / 5 + t2.score) / 2, review_score = t2.score
        WHERE apt_id = #{aptId}
    </update>

    <delete id="deleteReview">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>
</mapper>